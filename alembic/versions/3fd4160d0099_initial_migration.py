"""Initial migration

Revision ID: 3fd4160d0099
Revises: 
Create Date: 2025-03-04 19:37:27.447465

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from app.database import Base, sync_db_engine
from app.database import sync_db_engine
from app.models import User, Wallet
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.orm import sessionmaker


# revision identifiers, used by Alembic.
revision: str = '3fd4160d0099'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

Session = sessionmaker(autocommit=False, autoflush=False, bind=sync_db_engine)

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_full_name'), 'users', ['full_name'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_login'), 'users', ['login'], unique=True)
    op.create_table('wallets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wallets_id'), 'wallets', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('wallet_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('transaction_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    ### end Alembic commands ###
    session = Session()
    try:
        # Проверка на существующие записи с тем же email, чтобы избежать дублирования
        existing_users = session.query(User).filter(User.email.in_(['Petrov42@test.com', 'user1@test.com'])).all()

        if not existing_users:
            # Вставка пользователей
            users = [
                User(full_name="Петров Василий Иванович", login="VasyaAdmin", email="Petrov42@test.com", role="admin"),
                User(full_name="Test User1", login="user_test1", email="user1@test.com", role="user")
            ]
            session.add_all(users)
            session.commit()

            # Получаем id пользователей, чтобы использовать их в кошельках
            user1 = session.query(User).filter_by(email='Petrov42@test.com').first()
            user2 = session.query(User).filter_by(email='user1@test.com').first()

            # Вставка кошельков
            wallets = [
                Wallet(owner_id=user1.id, balance=0.0),
                Wallet(owner_id=user2.id, balance=100.0)
            ]
            session.add_all(wallets)
            session.commit()

    finally:
        session.close()


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_wallets_id'), table_name='wallets')
    op.drop_table('wallets')
    op.drop_index(op.f('ix_users_login'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_full_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
